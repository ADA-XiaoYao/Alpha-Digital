import requests import socket import ipaddress import uuid from typing import Dict, Union def get_ip_info(ip_address: str) -> Dict[str, Union[str, None]]: """ 使用 ip-api.com 查询 IP 地址的归属地信息。 :param ip_address: 要查询的 IP 地址 :return: 包含 IP 归属地信息的字典，或错误信息 """ # API URL url = f"http://ip-api.com/json/{ip_address}" try: # 发送 GET 请求 response = requests.get(url) # 检查响应状态码 if response.status_code == 200: # 解析 JSON 数据 data = response.json() # 提取所需信息 country = data.get('country', 'Unknown') region = data.get('regionName', 'Unknown') city = data.get('city', 'Unknown') isp = data.get('isp', 'Unknown') ip_type = 'IPv4' if ipaddress.ip_address(ip_address).version == 4 else 'IPv6' # 返回信息 return { 'country': country, 'region': region, 'city': city, 'isp': isp, 'ip_address': ip_address, 'ip_type': ip_type, 'subnet_mask': get_subnet_mask(ip_address), # 尝试获取子网掩码 'mac_address': get_mac_address() if is_local_ip(ip_address) else 'Not available for remote IPs' } else: return {'error': 'Failed to retrieve IP information'} except requests.RequestException as e: return {'error': str(e)} def get_subnet_mask(ip_address: str) -> Union[str, None]: """ 尝试获取给定 IP 地址的子网掩码。仅适用于本地网络中的 IP 地址。 :param ip_address: IP 地址 :return: 子网掩码字符串，或 None """ if not is_local_ip(ip_address): return "Not available for remote IPs" try: # 获取本地网络接口信息 addrs = psutil.net_if_addrs() for interface, addresses in addrs.items(): for addr in addresses: if addr.address == ip_address: return addr.netmask return "Subnet mask not found" except Exception as e: return str(e) def get_mac_address() -> str: """ 获取本地系统的 MAC 地址。 :return: MAC 地址字符串 """ mac_num = hex(uuid.getnode()).replace('0x', '').upper() mac = ':'.join(mac_num[i:i+2] for i in range(0, 12, 2)) return mac def is_local_ip(ip_address: str) -> bool: """ 检查给定的 IP 地址是否为本地 IP 地址。 :param ip_address: IP 地址 :return: 如果是本地 IP 地址则返回 True，否则返回 False """ try: ip = ipaddress.ip_address(ip_address) return ip.is_private or ip.is_loopback except ValueError: return False # 示例 IP 地址 if __name__ == "__main__": ip_address = '192.168.1.1' # 你可以替换为任何 IP 地址 # 查询 IP 信息 ip_info = get_ip_info(ip_address) # 打印结果 print(ip_info)
